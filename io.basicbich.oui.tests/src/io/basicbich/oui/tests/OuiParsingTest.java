/*
 * generated by Xtext 2.28.0
 */
package io.basicbich.oui.tests;

import com.google.inject.Inject;
import io.basicbich.oui.oui.Program;
import io.basicbich.oui.tests.compiler.jq.ProgramCompiler;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.eclipse.xtext.testing.util.ParseHelper;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;

import java.util.stream.Collectors;

@ExtendWith(InjectionExtension.class)
@InjectWith(OuiInjectorProvider.class)
class OuiParsingTest {
    @Inject
    ParseHelper<Program> parseHelper;

    @Test
    void loadModel() {
        Assertions.assertDoesNotThrow(() -> {
            var result = parseHelper.parse("$.[:] > colonne1: $.name, colonne2: $.age");
            Assertions.assertNotNull(result);
            var errors = result.eResource().getErrors();
            Assertions.assertTrue(errors.isEmpty(), "Unexpected errors: " + errors.stream().map(Object::toString).collect(Collectors.joining(", ")));
            var jqCompiler = new ProgramCompiler();
            var jqProg = jqCompiler.compile(result);
            Assertions.assertEquals(".[] | [.name, .age] | @csv", jqProg);
        });
    }
}
