grammar io.basicbich.oui.Oui with org.eclipse.xtext.common.Terminals

generate oui "http://basicbich.io/oui/Oui"

Program: {Program} (first=InstructionSet)?;

InstructionSet: declarations+=Declaration* instruction=Instruction ('|' next=InstructionSet)?;
Instruction: Selector | ObjectConstructor | '(' InstructionSet ')';

/* Declaration */
Declaration: name=ID '=' value=Instruction ';';

/* Selector */
Selector: scope=SelectorScope (fragments+=SelectorFragment)*;

SelectorScope: RootSelectorScope | NamedSelectorScope;
RootSelectorScope: {RootSelectorScope} '$';
NamedSelectorScope: DeclarationSelectorScope | FilterSelectorScope;
DeclarationSelectorScope hidden(): '$' declaration=[Declaration];
FilterSelectorScope: filter=Filter;

SelectorFragment: NamedSelectorFragment | IndexSelectorFragment | SliceSelectorFragment | StartSliceSelectorFragment;
NamedSelectorFragment: AttributeSelectorFragment;
AttributeSelectorFragment hidden(): '.' key=ObjectAttributeKey;

IndexSelectorFragment: {IndexSelectorFragment} '[' indexes+=INT? (',' indexes+=INT)* ']';
SliceSelectorFragment: '[' start=INT? ':' end=INT ']';
StartSliceSelectorFragment: '[' start=INT ':' ']';

/* Object constructor */
ObjectConstructor: {ObjectConstructor} '{' (attributes+=ObjectAttribute (',' attributes+=ObjectAttribute)*)? '}';
ObjectAttribute: (key=ObjectAttributeKey ':')? value=Instruction;
ObjectAttributeKey: ID | STRING;

/* Filter */
Filter: name=ID;
